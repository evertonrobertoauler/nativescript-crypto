
declare var AesGcmVersionNumber: number;

declare var AesGcmVersionString: interop.Reference<number>;

declare class IAGAesComponents extends NSObject {

	static alloc(): IAGAesComponents; // inherited from NSObject

	static getCipheredBlockByUsingAESOnBlockWithKeyError(cipheredBlock: interop.Reference<number>, block: interop.Reference<number>, key: NSData): boolean;

	static new(): IAGAesComponents; // inherited from NSObject
}

declare class IAGAesGcm extends NSObject {

	static alloc(): IAGAesGcm; // inherited from NSObject

	static cipheredDataByAuthenticatedEncryptingPlainDataWithAdditionalAuthenticatedDataAuthenticationTagLengthInitializationVectorKeyError(plainData: NSData, aad: NSData, tagLength: IAGAuthenticationTagLength, iv: NSData, key: NSData): IAGCipheredData;

	static new(): IAGAesGcm; // inherited from NSObject

	static plainDataByAuthenticatedDecryptingCipheredDataWithAdditionalAuthenticatedDataInitializationVectorKeyError(cipheredData: IAGCipheredData, aad: NSData, iv: NSData, key: NSData): NSData;
}

declare const enum IAGAuthenticationTagLength {

	Length128 = 16,

	Length120 = 15,

	Length112 = 14,

	Length104 = 13,

	Length96 = 12
}

declare var IAGBitsInUChar: number;

declare class IAGBitwiseComponents extends NSObject {

	static alloc(): IAGBitwiseComponents; // inherited from NSObject

	static getLeastSignificantBytesWithSizeInBufferWithSize(lsb: string, lsbSyze: number, buffer: string, bufferSize: number): void;

	static getMostSignificantBytesWithSizeInBufferWithSize(msb: string, msbSyze: number, buffer: string, bufferSize: number): void;

	static getSingleRightShiftedBlockWithBlock(shiftedBlock: interop.Reference<number>, block: interop.Reference<number>): void;

	static getXorBlockWithBlockAndBlock(buffer: interop.Reference<number>, value1: interop.Reference<number>, value2: interop.Reference<number>): void;

	static getXorBufferWithBufferBufferBufferSize(buffer: string, value1: string, value2: string, bufferSize: number): void;

	static isLeastSignificantBitActivatedAtPositionInBlock(position: number, block: interop.Reference<number>): boolean;

	static isMostSignificantBitActivatedAtPositionInBlock(position: number, block: interop.Reference<number>): boolean;

	static new(): IAGBitwiseComponents; // inherited from NSObject
}

declare class IAGCipheredData extends NSObject {

	static alloc(): IAGCipheredData; // inherited from NSObject

	static new(): IAGCipheredData; // inherited from NSObject

	readonly authenticationTag: interop.Pointer | interop.Reference<any>;

	readonly authenticationTagLength: IAGAuthenticationTagLength;

	readonly cipheredBuffer: interop.Pointer | interop.Reference<any>;

	readonly cipheredBufferLength: number;

	constructor(o: { cipheredBuffer: interop.Pointer | interop.Reference<any>; cipheredBufferLength: number; authenticationTag: interop.Pointer | interop.Reference<any>; authenticationTagLength: IAGAuthenticationTagLength; });

	initWithCipheredBufferCipheredBufferLengthAuthenticationTagAuthenticationTagLength(cipheredBuffer: interop.Pointer | interop.Reference<any>, cipheredBufferLength: number, authenticationTag: interop.Pointer | interop.Reference<any>, authenticationTagLength: IAGAuthenticationTagLength): this;

	isEqualToCipheredData(object: IAGCipheredData): boolean;
}

declare const enum IAGErrorCode {

	AESFailed = 0,

	InputDataLengthNotSupported = 1,

	AuthenticationTagsNotIdentical = 2
}

declare var IAGErrorDomain: string;

declare class IAGErrorFactory extends NSObject {

	static alloc(): IAGErrorFactory; // inherited from NSObject

	static errorAESFailed(): NSError;

	static errorAuthenticationTagsNotIdentical(): NSError;

	static errorInputDataLengthNotSupported(): NSError;

	static new(): IAGErrorFactory; // inherited from NSObject
}

declare class IAGGcmEndianness extends NSObject {

	static alloc(): IAGGcmEndianness; // inherited from NSObject

	static new(): IAGGcmEndianness; // inherited from NSObject

	static swapUInt32GcmToHost(arg: number): number;

	static swapUInt32HostToGcm(arg: number): number;

	static swapUInt64HostToGcm(arg: number): number;
}

declare class IAGGcmMathComponents extends NSObject {

	static alloc(): IAGGcmMathComponents; // inherited from NSObject

	static get32BitIncrementedBufferWithBufferSize(incBuffer: string, buffer: string, size: number): void;

	static getGCounterBufferWithBufferBufferSizeInitialCounterBlockKeyError(gcounterBuffer: string, buffer: string, bufferSize: number, icb: interop.Reference<number>, key: NSData): boolean;

	static getGhashBlockWithBufferBufferSizeHashSubkey(ghashBlock: interop.Reference<number>, buffer: string, bufferSize: number, hashSubkey: interop.Reference<number>): void;

	static new(): IAGGcmMathComponents; // inherited from NSObject
}

declare var IAGMaxBitPositionInABlock: number;
